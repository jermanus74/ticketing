{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/harry/Documents/GitHub/ticketing/src/app/Provider.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Providers = registerClientReference(\n    function() { throw new Error(\"Attempted to call Providers() from the server but Providers is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/Provider.tsx <module evaluation>\",\n    \"Providers\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,YAAY,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,sDACA","debugId":null}},
    {"offset": {"line": 21, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/harry/Documents/GitHub/ticketing/src/app/Provider.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Providers = registerClientReference(\n    function() { throw new Error(\"Attempted to call Providers() from the server but Providers is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/Provider.tsx\",\n    \"Providers\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,YAAY,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,kCACA","debugId":null}},
    {"offset": {"line": 35, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 45, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/harry/Documents/GitHub/ticketing/src/app/layout.tsx"],"sourcesContent":["import type { Metadata } from \"next\";\r\n// import { Geist, Geist_Mono } from \"next/font/google\";\r\nimport \"../styles/globals.css\";\r\nimport { Providers } from \"./Provider\";\r\n\r\n// const geistSans = Geist({\r\n//   variable: \"--font-geist-sans\",\r\n//   subsets: [\"latin\"],\r\n// });\r\n\r\n// const geistMono = Geist_Mono({\r\n//   variable: \"--font-geist-mono\",\r\n//   subsets: [\"latin\"],\r\n// });\r\n\r\nexport const metadata: Metadata = {\r\n  title: \"Create Next App\",\r\n  description: \"Generated by create next app\",\r\n};\r\n\r\nexport default function RootLayout({\r\n  children,\r\n}: Readonly<{\r\n  children: React.ReactNode;\r\n}>) {\r\n  \r\n    // const isProd = process.env.NODE_ENV === \"production\";\r\n  return (\r\n    <html lang=\"en\" suppressHydrationWarning>\r\n      <body>\r\n        <Providers>\r\n          <div className=\"\">\r\n            <main>{children}</main>\r\n            {isProd && (\r\n              <>\r\n                {/* <Analytics />\r\n                <SpeedInsights /> */}\r\n              </>\r\n            )}\r\n          </div>\r\n          <Toaster richColors />\r\n        </Providers>\r\n      </body>\r\n    </html>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;;AAGA;;;;AAYO,MAAM,WAAqB;IAChC,OAAO;IACP,aAAa;AACf;AAEe,SAAS,WAAW,EACjC,QAAQ,EAGR;IAEE,wDAAwD;IAC1D,qBACE,8OAAC;QAAK,MAAK;QAAK,wBAAwB;kBACtC,cAAA,8OAAC;sBACC,cAAA,8OAAC,uHAAA,CAAA,YAAS;;kCACR,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;0CAAM;;;;;;4BACN,wBACC;;;;;;;kCAMJ,8OAAC;wBAAQ,UAAU;;;;;;;;;;;;;;;;;;;;;;AAK7B","debugId":null}},
    {"offset": {"line": 112, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/harry/Documents/GitHub/ticketing/node_modules/next/src/server/route-modules/app-page/vendored/rsc/react-jsx-dev-runtime.ts"],"sourcesContent":["module.exports = require('../../module.compiled').vendored[\n  'react-rsc'\n].ReactJsxDevRuntime\n"],"names":["module","exports","require","vendored","ReactJsxDevRuntime"],"mappings":";AAAAA,OAAOC,OAAO,GAAGC,QAAQ,4HAAyBC,QAAQ,CACxD,YACD,CAACC,kBAAkB","ignoreList":[0],"debugId":null}}]
}